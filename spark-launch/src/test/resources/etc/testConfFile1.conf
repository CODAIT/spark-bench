spark-bench = {

  spark-submit-config = [{

    spark-args = {
      master = "local[2]"
    }
    workload-suites = [
      {
        descr = "KMeans in parallel with k = 1, 2"
        parallel = true
        repeat = 5
        benchmark-output = "/tmp/spark-bench-scalatest/multi-spark/spark-bench-test/conf-file-output-1.csv"

        workloads = [
          {
            name = "kmeans"
            input = "/tmp/spark-bench-scalatest/multi-spark/spark-bench-test/kmeans-data.parquet"
            k = 1
          },
          {
            name = "kmeans"
            input = "/tmp/spark-bench-scalatest/multi-spark/spark-bench-test/kmeans-data.parquet"
            k = 2
          }
        ]
      },
      {
        descr = "KMeans serially with k = 3, 4"
        parallel = false
        repeat = 3
        benchmark-output = "/tmp/spark-bench-scalatest/multi-spark/spark-bench-test/conf-file-output-2.parquet"


        workloads = [
          {
            name = kmeans
            input = "/tmp/spark-bench-scalatest/multi-spark/spark-bench-test/kmeans-data.parquet"
            k = [3, 4]
          }
        ]
      },
      {
        descr = "Several TimedSleep Workloads run in parallel along with a KMeans workload"
        parallel = true
        repeat = 1
        benchmark-output = "console"

        workloads = [
          {
            name = "timedsleep"
            partitions = 1
            sleepms = [100, 1000]
          },
          {
            name = "kmeans"
            k = 1
            seed = 96
            input = "/tmp/spark-bench-scalatest/multi-spark/spark-bench-test/kmeans-data.parquet"
          }
        ]
      }
    ]
  }]
}
