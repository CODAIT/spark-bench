spark-bench = {

  spark-submit-parallel = true

  spark-submit-config = [{
    spark-args = {
      master = ["local[2]", "yarn"]
    }
    conf = [
    {
      "spark.dynamicAllocation.enabled" = "false"
      "spark.shuffle.service.enabled" = "false"
    },
    {
      "spark.dynamicAllocation.enabled" = "true"
      "spark.shuffle.service.enabled" = "true"
    }]

    workload-suites = [
    {
      descr = "KMeans in parallel with k = 1, 2"
      parallel = true
      repeat = 5
      benchmark-output = "/tmp/spark-bench-scalatest/tmp/spark-bench-test/conf-file-output-1.csv"

      workloads = [
      {
        name = ["kmeans"]
        input = ["/tmp/spark-bench-scalatest/tmp/spark-bench-test/kmeans-data.parquet"]
        k = [1]
      }]
    }]
  },
  {
    spark-args = {
      master = "local[4]"
    }
    workload-suites = [
    {
      descr = "KMeans in parallel with k = 1, 2"
      parallel = true
      repeat = 5
      benchmark-output = "/tmp/spark-bench-scalatest/tmp/spark-bench-test/conf-file-output-1.csv"

      workloads = [
      {
        name = ["kmeans"]
        input = ["/tmp/spark-bench-scalatest/tmp/spark-bench-test/kmeans-data.parquet"]
        k = [2]
      }]
    },
    {
      descr = "KMeans serially with k = 3, 4"
      parallel = false
      repeat = 3
      benchmark-output = "/tmp/spark-bench-scalatest/tmp/spark-bench-test/conf-file-output-2.parquet"

      workloads = [
      {
        name = [kmeans]
        input = ["/tmp/spark-bench-scalatest/tmp/spark-bench-test/kmeans-data.parquet"]
        k = [3, 4]
      }]
    }]
  }]
}
